
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.util.ArrayList;



/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author matte
 */
public class MainPanel extends javax.swing.JPanel {

    private static final int NUMERO_CONCORRENTI = 6;
    private static final int MARGINE_SUPERIORE = 70;
    private static final int LARGHEZZA_CORSIA = 50;
    private static final int OFFSET_PARTENZA = 50;
    private static final int OFFSET_ARRIVO = 800;
    private static final int DIMENSIONE_CONCORRENTE = 10;
    
    private ArrayList <Concorrente> concorrenti;
    private ArrayList <Thread> threads;
            
    public MainPanel() {
        initComponents();
        
        //Fissiamo le dimensioni del pannello
        this.setPreferredSize(new Dimension(900, 400));
        
        //Definiamo il suo colore di sfondo
        this.setBackground(new Color(14,75,239));
        
        //Creo i 2 ArrayList
        concorrenti = new ArrayList(0);
        threads = new ArrayList(0);

    }
    
    //Metodo che verra' chiamato dal thread per segnalare che il concorrente x ha avuto un incremento y
    public synchronized void aggiornaPosizioneConcorrente(int numeroConcorrente, int incr) {
        //Incremento la posizione del concorrente
        concorrenti.get(numeroConcorrente).incrementaPosizioneX(incr);
        
        //Ridisegno il pannello
        this.repaint(); //Richiama il metodo piantComponent()
        
        //Controllo se ha vinto
        if(concorrenti.get(numeroConcorrente).getPosizioneX() >= OFFSET_ARRIVO) {
            //Interrompo tutti i thread
            for(int i=0; i<threads.size(); i++) {
                threads.get(i).interrupt();
            }
        }  
    }
    
    @Override
    public void paintComponent(Graphics g) {
        
        //Richiamo il metodo della superclasse il quale si occupa di disegnare lo sfondo
        super.paintComponent(g);
        
        //Convrtire l'oggetto Graphics in un oggetto Graphics2d
        Graphics2D g2d = (Graphics2D) g;
        
        //Disegno la pista
        g2d.setColor(Color.white);
        
        //Disegno le linee
        g2d.drawLine(OFFSET_ARRIVO, MARGINE_SUPERIORE, OFFSET_ARRIVO, MARGINE_SUPERIORE + NUMERO_CONCORRENTI * LARGHEZZA_CORSIA);
        g2d.drawLine(OFFSET_PARTENZA, MARGINE_SUPERIORE, OFFSET_PARTENZA, MARGINE_SUPERIORE + NUMERO_CONCORRENTI * LARGHEZZA_CORSIA);
    
        for(int i=0; i<=NUMERO_CONCORRENTI; i++) {
            g2d.drawLine(OFFSET_PARTENZA, MARGINE_SUPERIORE + i * LARGHEZZA_CORSIA, OFFSET_ARRIVO, MARGINE_SUPERIORE + i * LARGHEZZA_CORSIA);
        }
        
        //Disegno i concorrenti
        for(int i=0; i<concorrenti.size(); i++) {
            int posX = concorrenti.get(i).getPosizioneX();
            int posY = MARGINE_SUPERIORE + LARGHEZZA_CORSIA * i + LARGHEZZA_CORSIA/2;
            g2d.setColor(concorrenti.get(i).getColore());
            
            g2d.fillRect(posX - DIMENSIONE_CONCORRENTE/2, posY - DIMENSIONE_CONCORRENTE/2, DIMENSIONE_CONCORRENTE, DIMENSIONE_CONCORRENTE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnAvviaCorsa = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        btnAvviaCorsa.setText("Avvia corsa");
        btnAvviaCorsa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAvviaCorsaMouseClicked(evt);
            }
        });
        btnAvviaCorsa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAvviaCorsaActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Plantagenet Cherokee", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Corsa GUI - Personnettaz");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(285, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(224, 224, 224)
                .addComponent(btnAvviaCorsa)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnAvviaCorsa))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1)))
                .addContainerGap(356, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAvviaCorsaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAvviaCorsaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAvviaCorsaActionPerformed

    private void btnAvviaCorsaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAvviaCorsaMouseClicked
        concorrenti.clear();
        threads.clear();
        
        for(int i=0; i<NUMERO_CONCORRENTI; i++) {
            Concorrente concorrente = new Concorrente(new Color (57,255,20), OFFSET_PARTENZA);
            concorrenti.add(concorrente);
            
            ConcorrenteRunnable concorrenteRunnable = new ConcorrenteRunnable(this,i);
            threads.add(new Thread(concorrenteRunnable));   
        }
        for(int i=0; i<NUMERO_CONCORRENTI; i++) {
            threads.get(i).start();
        }
    }//GEN-LAST:event_btnAvviaCorsaMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAvviaCorsa;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
